[
  {
    "objectID": "03_Golden_join.html",
    "href": "03_Golden_join.html",
    "title": "Parcels and Addresses Join",
    "section": "",
    "text": "::: {.column-page-right style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::\n\n\n\n\nCombine single parcels and addresses.\n\n\n\nLooking at single parcels, how to addresses line up?\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n\n\nHow many parcels are associated with each address? We expect each address to be matched with only one parcel - because we merge multiple parcels sharing the same geometry into single parcels.\nWe may see a few addresses without parcels. Why?\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n\n\n\n\n::: {.column-page-right style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::\n\n\n\n\n::: {.column-page-right style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::\n\n\n\n\n::: {.column-page-right style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::\n\n\n\n\n::: {.column-page-right style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::"
  },
  {
    "objectID": "03_Golden_join.html#full-outer-join",
    "href": "03_Golden_join.html#full-outer-join",
    "title": "Parcels and Addresses Join",
    "section": "",
    "text": "Combine single parcels and addresses."
  },
  {
    "objectID": "03_Golden_join.html#examine-parcels",
    "href": "03_Golden_join.html#examine-parcels",
    "title": "Parcels and Addresses Join",
    "section": "",
    "text": "Looking at single parcels, how to addresses line up?\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "03_Golden_join.html#examine-addresses",
    "href": "03_Golden_join.html#examine-addresses",
    "title": "Parcels and Addresses Join",
    "section": "",
    "text": "How many parcels are associated with each address? We expect each address to be matched with only one parcel - because we merge multiple parcels sharing the same geometry into single parcels.\nWe may see a few addresses without parcels. Why?\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "03_Golden_join.html#merge-in-contacts.",
    "href": "03_Golden_join.html#merge-in-contacts.",
    "title": "Parcels and Addresses Join",
    "section": "",
    "text": "::: {.column-page-right style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::\n\n\n\n\n::: {.column-page-right style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::\n\n\n\n\n::: {.column-page-right style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::\n\n\n\n\n::: {.column-page-right style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::"
  },
  {
    "objectID": "01_Parcels_in_fan.html",
    "href": "01_Parcels_in_fan.html",
    "title": "setup",
    "section": "",
    "text": "This is the introduction paragraph. In this file we’re cleaning the data and setting up files for later processing."
  },
  {
    "objectID": "01_Parcels_in_fan.html#load-files",
    "href": "01_Parcels_in_fan.html#load-files",
    "title": "setup",
    "section": "Load files",
    "text": "Load files\n\n# Load the neighborhoods GeoJSON\n# creates data[\"Parcels\"] containing geojson data.\ndata = {}\nfor feature in [selector] + features:\n    geofile = get_newest_file( precious_folder, feature, ext=\".geojson\" )\n    #logger.debug(geofile)\n    logger.info(f\"Found {feature}:  {geofile}\" )\n    data[feature] = gpd.read_file( geofile )\n\n# convert all feature files to same CRS mapping as Civic_Associations\nfor feature in features:\n    data[feature] = data[feature].to_crs( data[selector].crs )\n\nINFO     | __main__:&lt;module&gt;:7 - Found Civic_Associations:  /home/john/projects/ssg-thefan-analysis/precious/Civic_Associations-2025-05-16.geojson\nINFO     | __main__:&lt;module&gt;:7 - Found Parcels:  /home/john/projects/ssg-thefan-analysis/precious/Parcels-2025-09-25.geojson\n\n\n\nDrop columns\n\n# columns to drop:\nshared_drops = ['CreatedBy','CreatedDate','EditBy','EditDate']\n## file specific column drop mappings\ndrop_columns = {\n    \"Civic_Associations\" : ['OBJECTID'] + shared_drops,\n    \"Addresses\"          : ['OBJECTID'] + shared_drops,\n    \"Parcels\"            : ['OBJECTID'],\n}\nfor feature in [selector] + features:\n    data[feature] = data[feature].drop(columns=drop_columns[feature])\n\n\n\nSpatial join, select only parcels and addresses in the Fan.\n\n# Pull out only FDA from Civic_Associations and store it\ndata[selector_key] = data[selector][ data[selector][\"Name\"] == selector_key ]\n\n# Select only features from the selector_key (FDA).  perform spatial join.\nfor feature in features:\n    predicate = \"overlaps\" if feature==\"Neighborhoods\" else \"within\"\n    data[feature+\"_in_fan\"] = gpd.sjoin(data[feature], data[selector_key], predicate=predicate, how=\"inner\")\n\n\n\nDrop unnecessary columns\n\n# Drop columns created from spatial join\nshared_drops = [\"index_right\",\"AdoptionDate\",\"ChangeDate\",\"Shape__Area\",\"Shape__Length\"]\ndrop_columns = {\n    \"Addresses\"          : ['GlobalID'] + shared_drops,\n    \"Parcels\"            : ['MaskedOwner','GlobalID_left','GlobalID_right'] + shared_drops,\n}\nfor feature in features:\n    feature_name = feature+\"_in_fan\"\n    data[feature_name] = data[feature_name].drop(columns=drop_columns[feature])\n\n\n\nCreate columns and recode columns in Parcels\n\ngdf = data[\"Parcels_in_fan\"]\n\ngdf[\"OwnerOccupied\"] = gdf.apply(\n    lambda row: str(row[\"MailAddress\"]).startswith(str(row[\"AsrLocationBldgNo\"]))\n                and str(row[\"MailCity\"]).upper() == \"RICHMOND\"\n                and str(row[\"MailState\"]).upper() == \"VA\"\n                and str(row[\"MailZip\"]) == \"23220\",\n    axis=1\n).map({True: 1, False: 0})\n\n\n# Rule 1: If PropertyClass contains 'Commercial'\ngdf.loc[gdf[\"PropertyClass\"].str.contains(\"Commercial\", case=False, na=False), \"LandUse\"] = \"Commercial\"\n\n# Rule 2: If PropertyClass contains 'Condo'\ngdf.loc[gdf[\"PropertyClass\"].str.contains(\"Condo\", case=False, na=False), \"LandUse\"] = \"Multi-Family\"\n\ngdf[\"SharedGeometry\"] = gdf.duplicated(subset=\"geometry\", keep=False).astype(int)\n\n# Create FanUse\n\nmapping = {\n    \"Single Family\": \"FanResidential\",\n    \"Multi-Family\": \"FanResidential\",\n    \"Duplex (2 Family)\" : \"FanResidential\",\n    \"Commercial\": \"FanBusiness\",\n    \"Industrial\": \"FanBusiness\",\n    \"Office\" : \"FanBusiness\",\n    \"Institutional\" : \"FanBusiness\",\n    \"Mixed-Use\" : \"FanMixed-Use\"\n}\ngdf[\"FanUse\"] = gdf[\"LandUse\"].map(mapping).fillna(\"FanOther\")\n\n# Ensure PropertyClass is string and safe for NaNs\nmask = gdf[\"PropertyClass\"].fillna(\"\").str.contains(\"vacant|parking|common|garage|storage|tower|space\", case=False, na=False)\n# Apply recode\ngdf.loc[mask, \"FanUse\"] = \"FanOther\"\n\n\n# A new variable to permit easy selecting\n\ngdf[\"FanUseType\"] = \"FanIgnore\"  # default\ngdf.loc[(gdf[\"OwnerOccupied\"] == 1) & (gdf[\"Mailable\"] == 1), \"FanUseType\"] = \"FanOwner\"\ngdf.loc[(gdf[\"OwnerOccupied\"] == 0) & (gdf[\"Mailable\"] == 1), \"FanUseType\"] = \"FanRental\"\n\n# Reset if it's one of the FanOther property classes.\ngdf.loc[mask, \"FanUseType\"] = \"FanIgnore\"\n\n\nmapping = {\n    \"FanResidential\": 1,\n    \"FanBusiness\": 10,\n    \"FanMixed-Use\" : 20,\n    \"FanOther\": 99\n}\ngdf[\"FanUseOrder\"] = gdf[\"FanUse\"].map(mapping).fillna(99)\n\ndata[\"Parcels_in_fan\"] = gdf\n\n\n\nSave Parcels_in_fan and Addresses_in_fan for later use.\n\nfor feature in features:\n    feature_name = feature+\"_in_fan\"\n\n    # store to parquet using pyarror (workflow tip from chatgpt\n    data[feature_name].to_parquet(f\"{feature_name}.parquet\",engine=\"pyarrow\")\n    logger.info(f\"Saving: {feature_name}.parquet\" )\n\n    # create dataframe without spatial geometries and store to CSV\n    xgdf = data[feature_name].drop(columns=\"geometry\").copy()\n    xgdf.to_csv(f\"{feature_name}.csv\", index=False)\n    logger.info(f\"Saving: {feature_name}.csv\" )\n\nINFO     | __main__:&lt;module&gt;:6 - Saving: Parcels_in_fan.parquet\nINFO     | __main__:&lt;module&gt;:11 - Saving: Parcels_in_fan.csv"
  },
  {
    "objectID": "01_Parcels_in_fan.html#fanuse-by-fanusetype",
    "href": "01_Parcels_in_fan.html#fanuse-by-fanusetype",
    "title": "setup",
    "section": "FanUse by FanUseType",
    "text": "FanUse by FanUseType\n\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n\n\nFanOwner - Parcel owner address matches building address number, parcel owner zip is 23220, and parcel has mailable USPS address for owner of record. These parcel owners have their tax record mailed to this parcel address, so they’re probably the owner.\nFanRental - Parcel owner address doesn’t match building address number. So, parcel owner address is OUTSIDE the Fan. It’s possible that the owner uses a different address for tax bill. NOTE - the parcel database doesn’t contain addresses for these parcels. We don’t have Fan addresses for these parcels, just the address of the tax owner. For example, the address for Joe’s Inn isn’t in parcel database. The parcel owner is outside the Fan.\nFanIgnore - not a mailable address, probably a park, parking lot, common area, etc."
  },
  {
    "objectID": "01_Parcels_in_fan.html#fanuse-landuse-by-fanusetype",
    "href": "01_Parcels_in_fan.html#fanuse-landuse-by-fanusetype",
    "title": "setup",
    "section": "FanUse, LandUse by FanUseType",
    "text": "FanUse, LandUse by FanUseType\n\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Parcels_in_fan.html#fanuse-landuse-propertyclass-by-fanusetype",
    "href": "01_Parcels_in_fan.html#fanuse-landuse-propertyclass-by-fanusetype",
    "title": "setup",
    "section": "FanUse, LandUse, PropertyClass by FanUseType",
    "text": "FanUse, LandUse, PropertyClass by FanUseType\n\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Parcels_in_fan.html#view-all-parcels",
    "href": "01_Parcels_in_fan.html#view-all-parcels",
    "title": "setup",
    "section": "View All Parcels",
    "text": "View All Parcels\nUse the Sort field to select subsets of parcels.\n\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html",
    "href": "01_Addresses_in_fan.html",
    "title": "setup",
    "section": "",
    "text": "This is the introduction paragraph. In this file we’re cleaning the data and setting up files for later processing."
  },
  {
    "objectID": "01_Addresses_in_fan.html#load-files",
    "href": "01_Addresses_in_fan.html#load-files",
    "title": "setup",
    "section": "Load files",
    "text": "Load files\n\n# Load the neighborhoods GeoJSON\n# creates data[\"Parcels\"] containing geojson data.\ndata = {}\nfor feature in [selector] + features:\n    geofile = get_newest_file( precious_folder, feature, ext=\".geojson\" )\n    #logger.debug(geofile)\n    logger.info(f\"Found {feature}:  {geofile}\" )\n    data[feature] = gpd.read_file( geofile )\n\n# convert all feature files to same CRS mapping as Civic_Associations\nfor feature in features:\n    data[feature] = data[feature].to_crs( data[selector].crs )\n\nINFO     | __main__:&lt;module&gt;:7 - Found Civic_Associations:  /home/john/projects/ssg-thefan-analysis/precious/Civic_Associations-2025-05-16.geojson\nINFO     | __main__:&lt;module&gt;:7 - Found Addresses:  /home/john/projects/ssg-thefan-analysis/precious/Addresses-2025-09-25.geojson\n\n\n\nDrop columns\n\n# columns to drop:\nshared_drops = ['CreatedBy','CreatedDate','EditBy','EditDate']\n## file specific column drop mappings\ndrop_columns = {\n    \"Civic_Associations\" : ['OBJECTID'] + shared_drops,\n    \"Addresses\"          : ['OBJECTID'] + shared_drops,\n    \"Parcels\"            : ['OBJECTID'],\n}\nfor feature in [selector] + features:\n    data[feature] = data[feature].drop(columns=drop_columns[feature])\n\n\n\nSpatial join, select only parcels and addresses in the Fan.\n\n# Pull out only FDA from Civic_Associations and store it\ndata[selector_key] = data[selector][ data[selector][\"Name\"] == selector_key ]\n\n# Select only features from the selector_key (FDA).  perform spatial join.\nfor feature in features:\n    predicate = \"overlaps\" if feature==\"Neighborhoods\" else \"within\"\n    data[feature+\"_in_fan\"] = gpd.sjoin(data[feature], data[selector_key], predicate=predicate, how=\"inner\")\n\n\n\nDrop unnecessary columns\n\n# Drop columns created from spatial join\nshared_drops = [\"index_right\",\"AdoptionDate\",\"ChangeDate\",\"Shape__Area\",\"Shape__Length\"]\ndrop_columns = {\n    \"Addresses\"          : ['GlobalID'] + shared_drops,\n    \"Parcels\"            : ['MaskedOwner','GlobalID_left','GlobalID_right'] + shared_drops,\n}\nfor feature in features:\n    feature_name = feature+\"_in_fan\"\n    data[feature_name] = data[feature_name].drop(columns=drop_columns[feature])\n\n\n\nClean columns in Addresses\n\ngdf = data[\"Addresses_in_fan\"]\n\n# Trim and normalize white space\ngdf = gdf.apply(lambda col: col.str.strip() if col.dtype == \"object\" else col)\ngdf = gdf.apply(lambda col: col.str.strip().str.replace(r\"\\s+\", \" \", regex=True) \n                if col.dtype == \"object\" else col)\n\n# Make sure values are integers, or compare as strings consistently\ngdf.loc[~gdf[\"ZipCode\"].isin(['23220', '23284']), \"ZipCode\"] = '23220'\n\n# Clean up double spaces\ngdf[\"AddressLabel\"] = (\n    gdf[\"AddressLabel\"]\n    .astype(str)\n    # Replace non-breaking spaces with regular spaces\n    .str.replace(u\"\\u00A0\", \" \", regex=False)\n    # Remove other invisible/control characters\n    .str.replace(r\"[\\x00-\\x1F\\x7F-\\x9F]\", \"\", regex=True)\n    # Collapse multiple spaces (including tabs/newlines) into one\n    .str.replace(r\"\\s+\", \" \", regex=True)\n    # Trim leading/trailing whitespace\n    .str.strip()\n)\n\ngdf[\"HasDoubleSpaces\"] = gdf[\"AddressLabel\"].astype(str).str.contains(r\"\\s{2,}\")\ngdf[\"AddressLen\"] = gdf[\"AddressLabel\"].astype(str).str.len()\nbad_rows = gdf[gdf[\"HasDoubleSpaces\"]]\nprint(bad_rows[[\"AddressLabel\", \"AddressLen\"]])\n\nEmpty DataFrame\nColumns: [AddressLabel, AddressLen]\nIndex: []\n\n\n\n## New columns\ngdf[\"AddressBase\"] = (\n    gdf[\"BuildingNumber\"].fillna(\"\").astype(str).str.strip() + \" \" +\n    gdf[\"StreetDirection\"].fillna(\"\").astype(str).str.strip() + \" \" +\n    gdf[\"StreetName\"].fillna(\"\").astype(str).str.strip() + \" \" +\n    gdf[\"StreetType\"].fillna(\"\").astype(str).str.strip()\n).str.replace(r\"\\s+\", \" \", regex=True).str.strip()\n\ndef make_extension(row):\n    parts = []\n    # only include UnitType if it's not None, empty, or \"None\"\n    if row[\"UnitType\"] not in [None, \"\", \"None\"]:\n        parts.append(str(row[\"UnitType\"]).strip())\n    # only include UnitValue if it's not None or empty\n    if row[\"UnitValue\"] not in [None, \"\"]:\n        parts.append(str(row[\"UnitValue\"]).strip())\n    return \" \".join(parts)\n\ngdf[\"AddressExtension\"] = gdf.apply(make_extension, axis=1)\n\n\n# If AddressExtension is empty but ExtensionWithUnit has value → copy over\ngdf.loc[\n    (gdf[\"AddressExtension\"].str.len() == 0) & (gdf[\"ExtensionWithUnit\"].str.len() &gt; 0),\n    \"AddressExtension\"\n] = gdf[\"ExtensionWithUnit\"]\n\n# If ExtensionWithUnit is empty but AddressExtension has value → copy over\ngdf.loc[\n    (gdf[\"ExtensionWithUnit\"].str.len() == 0) & (gdf[\"AddressExtension\"].str.len() &gt; 0),\n    \"ExtensionWithUnit\"\n] = gdf[\"AddressExtension\"]\n\n\n\nA few records mention REAR APT A and REAR APT B\n\n# Condition: AddressLabel contains both \"REAR\" and \"APT\"\nmask = gdf[\"AddressLabel\"].str.contains(\"REAR APT\", case=False, na=False)\n\n# Remove \"REAR\" from AddressLabel\ngdf.loc[mask, \"AddressLabel\"] = gdf.loc[mask, \"AddressLabel\"].str.replace(\n    \"REAR APT\", \"APT\", case=False, regex=False\n).str.strip()\n\n# Set ExtensionWithUnit = AddressExtension for these rows\ngdf.loc[mask, \"ExtensionWithUnit\"] = gdf.loc[mask, \"AddressExtension\"]\n\n\n\nFix 425 Strawberry Street\n\ngdf.loc[gdf[\"AddressBase\"] == \"425 Strawberry St\", \"AddressLabel\"] = (\n    gdf[\"AddressBase\"] + \" \" + gdf[\"AddressExtension\"].fillna(\"\")\n).str.strip()\n\n\ndata[feature_name] = gdf\n\n\n\nSave Parcels_in_fan and Addresses_in_fan for later use.\n\nfor feature in features:\n    feature_name = feature+\"_in_fan\"\n\n    # store to parquet using pyarror (workflow tip from chatgpt\n    data[feature_name].to_parquet(f\"{feature_name}.parquet\",engine=\"pyarrow\")\n    logger.info(f\"Saving: {feature_name}.parquet\" )\n\n    # create dataframe without spatial geometries and store to CSV\n    gdf = data[feature_name].drop(columns=\"geometry\")\n    gdf.to_csv(f\"{feature_name}.csv\", index=False)\n    logger.info(f\"Saving: {feature_name}.csv\" )\n\nINFO     | __main__:&lt;module&gt;:6 - Saving: Addresses_in_fan.parquet\nINFO     | __main__:&lt;module&gt;:11 - Saving: Addresses_in_fan.csv"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-count-addresses-by-zipcode",
    "href": "01_Addresses_in_fan.html#list-count-addresses-by-zipcode",
    "title": "setup",
    "section": "List count addresses by zipcode",
    "text": "List count addresses by zipcode\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-odd-addresses",
    "href": "01_Addresses_in_fan.html#list-odd-addresses",
    "title": "setup",
    "section": "List odd addresses",
    "text": "List odd addresses\nThis should return blank. These were cleaned/fixed above.\nshow_result_set(\"\"\"\nselect \n  *\nfrom\n  addresses\nwhere\n  not ZipCode in ('23220','23284')\norder by\n  StreetName,AddressLabel\n\n\"\"\",pageLength=10)\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-of-street-names",
    "href": "01_Addresses_in_fan.html#list-of-street-names",
    "title": "setup",
    "section": "List of Street Names",
    "text": "List of Street Names\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-of-street-types",
    "href": "01_Addresses_in_fan.html#list-of-street-types",
    "title": "setup",
    "section": "List of Street Types",
    "text": "List of Street Types\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-addressbase-that-dont-end-with-valid-streettype",
    "href": "01_Addresses_in_fan.html#list-addressbase-that-dont-end-with-valid-streettype",
    "title": "setup",
    "section": "List AddressBase that don’t end with valid StreetType",
    "text": "List AddressBase that don’t end with valid StreetType\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-addresslabels-with-mismatched-addressbase",
    "href": "01_Addresses_in_fan.html#list-addresslabels-with-mismatched-addressbase",
    "title": "setup",
    "section": "List AddressLabels with mismatched AddressBase",
    "text": "List AddressLabels with mismatched AddressBase\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-addresses-with-mismatched-addressextension",
    "href": "01_Addresses_in_fan.html#list-addresses-with-mismatched-addressextension",
    "title": "setup",
    "section": "List Addresses with mismatched AddressExtension",
    "text": "List Addresses with mismatched AddressExtension\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-addresses-with-mismatched-addressextension-and-extensionwithunit",
    "href": "01_Addresses_in_fan.html#list-addresses-with-mismatched-addressextension-and-extensionwithunit",
    "title": "setup",
    "section": "List Addresses with mismatched AddressExtension and ExtensionWithUnit",
    "text": "List Addresses with mismatched AddressExtension and ExtensionWithUnit\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-addresses-that-dont-add-up",
    "href": "01_Addresses_in_fan.html#list-addresses-that-dont-add-up",
    "title": "setup",
    "section": "List addresses that don’t add up",
    "text": "List addresses that don’t add up\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-of-valid-unit-types",
    "href": "01_Addresses_in_fan.html#list-of-valid-unit-types",
    "title": "setup",
    "section": "List of valid unit types",
    "text": "List of valid unit types\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#list-of-addresses-with-unittype-in-addresslabel-and-missing-extensionwithunit",
    "href": "01_Addresses_in_fan.html#list-of-addresses-with-unittype-in-addresslabel-and-missing-extensionwithunit",
    "title": "setup",
    "section": "List of Addresses with unittype in AddressLabel and missing ExtensionWithUnit",
    "text": "List of Addresses with unittype in AddressLabel and missing ExtensionWithUnit\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "01_Addresses_in_fan.html#view-all-addresses",
    "href": "01_Addresses_in_fan.html#view-all-addresses",
    "title": "setup",
    "section": "View All Addresses",
    "text": "View All Addresses\n\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "02_Contacts_in_fan.html",
    "href": "02_Contacts_in_fan.html",
    "title": "setup",
    "section": "",
    "text": "This is the introduction paragraph. In this file we’re cleaning the data and setting up files for later processing."
  },
  {
    "objectID": "02_Contacts_in_fan.html#clean-and-classify-fda-addresses",
    "href": "02_Contacts_in_fan.html#clean-and-classify-fda-addresses",
    "title": "setup",
    "section": "Clean and classify FDA addresses",
    "text": "Clean and classify FDA addresses\nAs much care as possible goes into classifying the hodge-podge of FDA addresses.\nBelow is a list of addresses from the FDA database. If it’s empty GOOD. If not, you’ve got to decide how to clean and/or classify the address.\nIt’s a very manual process.\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)"
  },
  {
    "objectID": "02_Contacts_in_fan.html#addresses-in-city-database",
    "href": "02_Contacts_in_fan.html#addresses-in-city-database",
    "title": "setup",
    "section": "Addresses in City database",
    "text": "Addresses in City database\nBelow is a listing of addresses found in the FAN city database. If an address isn’t found in here, then the address isn’t found in the Fan and isn’t in the FDA.\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n\n::: {.column-screen-inset style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::\n\n\n\n\n::: {.column-screen-inset style=\"font-size:0.7em\"}\n\n\n\n\n    \n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\n    Loading ITables v2.5.2 from the internet...\n    (need help?)\n    \n\n\n\n\n:::"
  },
  {
    "objectID": "data_sources.html",
    "href": "data_sources.html",
    "title": "Data Sources",
    "section": "",
    "text": "The City of Richmond maintains an arcgis geodata repository called Richmond GeoHub.\nData on the geohub are organized into key areas. For our analysis, we’ll be using the following data sources.\n\nAddresses\n\nAll of the official, mapped inventory of all unit and non-unit-based addresses in the City. Includes only active addresses.\n\nParcels\n\nCity of Richmond property ownership information, mapped by land ownership (parcels).\n\nCivic Associations\n\nRepresents civic organization boundaries in the city of Richmond, Virginia.\n\nNational Historic Districts\n\nRepresents districts and sites that are listed on the National Register of Historic Places (Federal designation) and the Virginia Landmarks Register (State designation).\n\nNeighborhoods\n\nCity of Richmond Neighborhoods.\n\n\nFor our Fan District analysis we will be working with Civic Associations to get the formal boundary of the Fan District Association.\nWe then use that boundary to determine Addresses and Parcels in the Fan District Association"
  }
]
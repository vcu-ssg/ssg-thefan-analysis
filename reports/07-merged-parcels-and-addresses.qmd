---
title: Fan District Association
---


## Load the files

```{python}
import duckdb

con = duckdb.connect()
con.execute("INSTALL spatial; LOAD spatial;")

# Load parcels (polygon geometries)
con.execute("""
    CREATE TABLE parcels AS
    SELECT * FROM ST_Read('../data/Parcels_in_fan.geojson');
""")

# Load addresses (point geometries)
con.execute("""
    CREATE TABLE addresses AS
    SELECT * FROM ST_Read('../data/Addresses_in_fan.geojson');
""")

```

### Count rows

```{python}
# Count rows
parcel_count = con.execute("SELECT COUNT(*) FROM parcels").fetchone()[0]
address_count = con.execute("SELECT COUNT(*) FROM addresses").fetchone()[0]

print(f"Number of parcels: {parcel_count}")
print(f"Number of addresses: {address_count}")
```


## Spatial Join

```{python}
con.execute("""
CREATE TABLE addr_with_parcels AS
SELECT 
    a.*,
    p.*
FROM addresses a
JOIN parcels p
  ON ST_Within(a.geom, p.geom);
""")
```

## Metrics on join

```{python}
# Count how many addresses matched a parcel
matched = con.execute("SELECT COUNT(DISTINCT id) FROM addr_with_parcels").fetchone()[0]

# Total counts (repeated from above)
parcel_count = con.execute("SELECT COUNT(*) FROM parcels").fetchone()[0]
address_count = con.execute("SELECT COUNT(*) FROM addresses").fetchone()[0]

# Addresses with no parcel
unmatched = address_count - matched

print(f"Number of parcels:   {parcel_count}")
print(f"Number of addresses: {address_count}")
print(f"Addresses matched:   {matched}")
print(f"Addresses unmatched: {unmatched}")
```


## Check results

```{python}
df = con.execute("SELECT * FROM addr_with_parcels").df()
print(df.size)
print(df.head())

```

## Save results

```{python}
con.execute("""
COPY (
    SELECT ST_AsGeoJSON(geom) AS geojson, *
    FROM addr_with_parcels
) TO '../data/fan_addresses_with_parcels.geojson' (FORMAT JSON);
""")

```

## Save non-geometries to CSV

```{python}
con.execute("""
    COPY (
        SELECT * EXCLUDE (geom)
        FROM addr_with_parcels
    ) TO '../data/fan_addresses_with_parcels.csv'
    (HEADER, DELIMITER ',');
""")
```


---
title: Cleaning the Holiday House Tour data
---

## Geocoding Excel HHT file (mini-dashboard)
```{python}
import pandas as pd
import time, os

# Toggle this to True the first time you want to geocode;
# after that, leave it False so you don’t re-hit the API.
RUN_GEOCODING = False

# Paths
CLEAN_CSV     = "../data/cleaned_hht_homes.csv"
GEOCODED_CSV  = "../data/geocoded_hht_homes.csv"

if RUN_GEOCODING:
    from geopy.geocoders import Nominatim
    from geopy.exc import GeocoderTimedOut

    # Load the free-form cleaned file
    df = pd.read_csv(CLEAN_CSV)

    # Build a full address string for geocoding
    def build_full_address(addr):
        return f"{addr}, Richmond, VA"

    df["full_address"] = df["Address"].astype(str).apply(build_full_address)

    # Initialize Nominatim once
    geolocator = Nominatim(user_agent="hht_geocoder", timeout=10)

    # Geocode with simple retry logic
    def geocode_address(address, retries=3):
        for _ in range(retries):
            try:
                time.sleep(1)  # 1 sec between queries to respect rate limits
                loc = geolocator.geocode(address)
                if loc:
                    return loc.latitude, loc.longitude
            except GeocoderTimedOut:
                time.sleep(2)
        return (None, None)

    # Apply geocoding
    coords = df["full_address"].apply(geocode_address)
    df[["lat", "lon"]] = pd.DataFrame(coords.tolist(), index=df.index)

    # Drop any failures
    df = df.dropna(subset=["lat", "lon"])

    # Save for your dashboard
    df.to_csv(GEOCODED_CSV, index=False)
    print(f"✅ Geocoded and saved to {GEOCODED_CSV}")
else:
    if not os.path.exists(GEOCODED_CSV):
        raise FileNotFoundError(f"No geocoded file found at {GEOCODED_CSV}; set RUN_GEOCODING=True once.")
    print("Skipping geocoding; using existing geocoded_hht_homes.csv")

# Preview the first few rows
df = pd.read_csv(GEOCODED_CSV)
df.head()
```
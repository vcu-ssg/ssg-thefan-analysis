---
title: FDA - Static Map
---

```{python}

import geopandas as gpd
import os

import matplotlib.pyplot as plt
from matplotlib.patches import Patch
from matplotlib.lines import Line2D


features = ["Addresses","Parcels"]
selector = "Civic_Associations"
selector_key = "Fan District Association"

# List of base names
base_names = ["Addresses_in_fan", "Parcels_in_fan","Fan District Association"]

# Folder where GeoJSON files are located
input_folder = "../data"

# Load files into a dictionary
data = {}

for name in base_names:
    file_path = os.path.join(input_folder, f"{name}.geojson")
    if os.path.exists(file_path):
        data[name] = gpd.read_file(file_path)
    else:
        print(f"⚠️ File not found: {file_path}")

```


## FDA - Static Map

Below is a static map of the Fan District Association, using data
obtained from the City of Richmond GeoHub. The image shows the boundary
of the Fan District Association in black.  Addresses are identifed by red dots.
Parcels are identified as gray regions.

[Click here](./fan_map.png) to download a PNG of this image.


::: {.column-page-inset-right}
```{python}
# Plotting
fig, ax = plt.subplots(figsize=(10, 10))

data[selector_key].boundary.plot(ax=ax, color="black", linewidth=3, label="The Fan boundary")
data["Parcels_in_fan"].plot(ax=ax, color="lightgray", edgecolor="gray", alpha=0.7, label="Parcels")
data["Addresses_in_fan"].plot(ax=ax, color="red", markersize=5, label="Addresses")
#data["Neighborhoods_in_fan"].plot(ax=ax, facecolor='none', edgecolor="lightblue", markersize=5, label="Neighborhoods")

legend_elements = [
    Line2D([0], [0], color="black", lw=3, label="The Fan boundary"),
    Patch(facecolor="lightgray", edgecolor="gray", label="Parcels"),
    Line2D([0], [0], marker='o', color='w', label="Addresses", markerfacecolor='red', markersize=6),
#    Line2D([0], [0], color="lightblue", lw=1.5, label="Neighborhoods boundary")
]

ax.legend(handles=legend_elements)

ax.set_title("Addresses and Parcels in The Fan")
ax.axis("off")
plt.tight_layout()

ax.set_title("Addresses and Parcels in The Fan")
ax.axis("off")
plt.tight_layout()

plt.savefig("../docs/fan_map.png", dpi=300, bbox_inches="tight")

plt.show()
```
:::

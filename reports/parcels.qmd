---
title: ""
format: dashboard
---



## Row {height="18%"}

::: {.card .border-0 width=10%}
:::

```{python}
#| output: asis
import os
import math

import geopandas as gpd
import matplotlib as plt

from itables import show


base_names = ["Parcels_in_fan"]
input_folder = "../data"

data={}
for name in base_names:
    file_path = os.path.join(input_folder, f"{name}.geojson")
    if os.path.exists(file_path):
        data[name] = gpd.read_file(file_path)
    else:
        print(f"current dir: {os.getcwd()}")
        print(f"⚠️ File not found: {file_path}")
        stop()

parcels = data["Parcels_in_fan"]
parcels["OwnerOccupied"] = parcels.apply(
        lambda row: str(row["MailAddress"]).startswith(str(row["AsrLocationBldgNo"])),
        axis=1
    )

parcel_count = len(parcels)

def showCard( title, value, description):
  description_line = ""
  if description:
    description_line = f"<p class='value-box-desc'>{description}</p>"

  print(f"""
  <div class="card valuebox cell bslib-card html-fill-container bslib-value-box bg-light" data-bslib-card-init="" data-require-bs-caller="card()">
  <div class="card-body html-fill-item html-fill-container">
  <div class="card-body html-fill-item html-fill-container">
  <div class="value-box-area">
  <p class="value-box-title">{title}</p>
  <p class="value-box-value">{value}</p>
  {description_line}
  </div>
  </div>
  </div>
  </div>
  """)

showCard("Total Parcels",parcel_count,"in the Fan")
```



```{python}
#| output: asis
count_single_family = (parcels["LandUse"] == "Single Family").sum()
showCard("Single Family",count_single_family,"Parcels")
```

```{python}
#| output: asis

count_owner_occ_sf = len(parcels[(parcels["OwnerOccupied"] == True) & 
                                 (parcels["LandUse"] == "Single Family")])
showCard("Owner Occupied",count_owner_occ_sf,"Single Family Parcels")

```

::: {.card .border-0 width=10%}
:::

## Row {height="65%""}

{{< embed ./_plots/06_parcels.qmd >}}
